{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","infinite","frameSize","step","itemWidth","animationDuration","useState","stepInPx","setStepInPx","length","end","setEnd","count","setCount","valueIncrement","value","increment","valueDecrement","decrement","stepCopy","distance","something","className","style","width","transform","transitionDuration","map","image","src","alt","type","onClick","stepInPx2","end2","App","state","handleLoop","setState","handleFrameSize","e","target","handleStep","handleItemWidth","handleAnimationDuration","this","name","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dde364d6.chunk.js","sourcesContent":["import './Carousel.scss';\nimport { useState } from 'react';\n\ntype Props = {\n  images: string[],\n  infinite: boolean,\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images, infinite, frameSize, step, itemWidth, animationDuration,\n}) => {\n  const [stepInPx, setStepInPx] = useState(0);\n  const [end, setEnd] = useState(images.length);\n  const [count, setCount] = useState(0);\n\n  function valueIncrement(value: number, increment: number) {\n    return value + increment;\n  }\n\n  function valueDecrement(value: number, decrement: number) {\n    return value - decrement;\n  }\n\n  let stepCopy = step;\n\n  if (step >= images.length) {\n    stepCopy = images.length - 1;\n  }\n\n  const distance = stepCopy * itemWidth;\n  const something = (images.length - 1) * itemWidth;\n\n  const next = () => {\n    if (infinite === false) {\n      if (stepCopy < end) {\n        setEnd(end2 => valueDecrement(end2, stepCopy));\n        setStepInPx(stepInPx2 => valueIncrement(stepInPx2, distance));\n      } else if (stepCopy >= end && end >= 1) {\n        setStepInPx(something);\n        setEnd(1);\n      }\n    } else if (infinite === true) {\n      if ((end - stepCopy) < frameSize - 1) {\n        setCount(1);\n      }\n\n      if (end > stepCopy) {\n        setEnd(end2 => valueDecrement(end2, stepCopy));\n        setStepInPx(stepInPx2 => valueIncrement(stepInPx2, distance));\n      } else if (end <= stepCopy) {\n        if (count > 0) {\n          setStepInPx(0);\n          setCount(0);\n          setEnd(images.length);\n        } else {\n          setStepInPx(something);\n          setCount(1);\n        }\n      }\n    }\n  };\n\n  const back = () => {\n    if (stepInPx > 0 && stepInPx > (stepCopy * itemWidth)) {\n      setStepInPx(stepInPx2 => valueDecrement(stepInPx2, distance));\n      setEnd(end2 => valueIncrement(end2, stepCopy));\n    } else {\n      setStepInPx(0);\n      setCount(0);\n      setEnd(images.length);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"box\" style={{ width: frameSize * itemWidth }}>\n        <ul className=\"Carousel__list\" style={{ transform: `translateX(${-stepInPx}px)`, transitionDuration: `${animationDuration / 1000}s` }}>\n          {images.map((image: string) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt=\"2\"\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button type=\"button\" onClick={back}>Prev</button>\n      <button type=\"button\" onClick={next} data-cy=\"next\">Next</button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype State = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleLoop = () => {\n    this.setState({ infinite: true });\n  };\n\n  handleFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +e.target.value,\n    });\n  };\n\n  handleStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  handleItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  handleAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  render() {\n    const {\n      images, infinite, frameSize, step, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"main\">\n          <Carousel\n            images={images}\n            frameSize={frameSize}\n            step={step}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n\n          <div className=\"inputs\">\n            <label>\n              <input type=\"number\" name=\"step\" onChange={this.handleStep} />\n              <p>step</p>\n            </label>\n            <label>\n              <input\n                type=\"number\"\n                name=\"frameSize\"\n                onChange={this.handleFrameSize}\n              />\n              <p>frameSize</p>\n            </label>\n            <label>\n              <input\n                type=\"number\"\n                name=\"itemWidth\"\n                onChange={this.handleItemWidth}\n              />\n              <p>itemWidth</p>\n            </label>\n            <label>\n              <input\n                type=\"number\"\n                name=\"animationDuration\"\n                onChange={this.handleAnimationDuration}\n              />\n              <p>animationDuration</p>\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"loop\"\n                onChange={this.handleLoop}\n              />\n              <p>infinite</p>\n            </label>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}